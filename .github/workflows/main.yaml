name: Main CI

on:
  push:
    paths:
      - 'Dockerfile'
      - '.github/workflows/**'
    branches:
      - "main"
      - "dev"
    tags:
      - 'v*'
  pull_request:
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ghcr.io/${{ github.repository }}
  COMMIT_URL: https://github.com/${{ github.repository }}/commit/${{ github.sha }}

jobs:
  build:
    name: Build Images
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
    strategy:
      fail-fast: true
      matrix:
        platform:
          # - linux/386
          - linux/amd64
          # - linux/amd64/v2
          # - linux/amd64/v3
          # - linux/arm/v6
          # - linux/arm/v7
          - linux/arm64
          # - linux/ppc64le
          # - linux/s390x

    steps:

      - name: Checking Out Branch
        uses: actions/checkout@v4.1.7
        with:
          fetch-depth: 0

      - name: Set Utility Environment Variables
        run: |
          echo "TRAEFIK_VERSION=$(grep 'ARG TRAEFIK_VERSION' Dockerfile | cut -d '=' -f2)" >> $GITHUB_ENV
          echo "SHA_SHORT=$(git rev-parse --short HEAD)"                                   >> $GITHUB_ENV

      - name: Docker Setup QEMU
        uses: docker/setup-qemu-action@v3.2.0

      - name: Login to Container Registry
        uses: docker/login-action@v3.3.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.repository_owner }}
          password: ${{ secrets.BUILD_TOKEN }}

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v3.6.1

      - name: Build Docker Image
        id: docker_build
        uses: docker/build-push-action@v6.5.0
        with:
          context: .
          file: Dockerfile
          platforms: ${{ matrix.platform }}
          outputs: type=image,name=${{ env.IMAGE_NAME }},push-by-digest=true,name-canonical=true,push=${{ (github.event.pull_request.head.repo.full_name == github.repository || github.event_name != 'pull_request') && 'true' || 'false' }}
          labels: |
            "commit=${{ github.sha }}"
            "commit_url=${{ env.COMMIT_URL }}"
            "workflow_run=${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"

      - name: Export Image Digests
        id: digest-prep
        run: |
          mkdir -p /tmp/digests
          digest="${{ steps.docker_build.outputs.digest }}"
          echo "manifest-hash=${digest#sha256:}" >> "$GITHUB_OUTPUT"
          touch "/tmp/digests/${digest#sha256:}"

      - name: Upload Image Digests
        uses: actions/upload-artifact@v4.3.5
        with:
          name: docker-digests-${{ steps.digest-prep.outputs.manifest-hash }}
          path: /tmp/digests/*
          if-no-files-found: error
          retention-days: 1

  test:
    name: Test Container
    if: ${{ github.event.pull_request.head.repo.full_name == github.repository || github.event_name != 'pull_request' }}
    runs-on: ubuntu-latest
    permissions:
      packages: read
    needs: [build]

    steps:

      - name: Run Docker Image
        run: |
          docker run -d -p 80:80 --name test ${{ env.IMAGE_NAME }}:latest

      - name: Test Request
        run: |
          sleep 5
          curl -v http://localhost || (docker logs test && exit 1)

      - name: Clean Up
        run: |
          docker stop test
          docker rm test

  publish:
    name: Publish Docker Multi-arch Manifest
    if: ${{ github.event.pull_request.head.repo.full_name == github.repository || github.event_name != 'pull_request' }}
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
    needs: [build,test]

    steps:

      - name: Download Image Digests
        uses: actions/download-artifact@v4.1.8
        with:
          path: /tmp/digests
          pattern: docker-digests-*
          merge-multiple: true

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3.6.1

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3.3.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract Metadata
        id: meta
        uses: docker/metadata-action@v5.5.1
        with:
          images: ${{ env.IMAGE_NAME }}
          tags: |
            type=semver,pattern={{version}},prefix=v
            type=semver,pattern={{major}}.{{minor}},prefix=v
            type=ref,event=branch
            type=ref,event=pr
          flavor: |
            latest=auto

      - name: Create Manifest List and Push
        working-directory: /tmp/digests
        run: |
          docker buildx imagetools create $(jq -cr '.tags | map("-t " + .) | join(" ")' <<< "$DOCKER_METADATA_OUTPUT_JSON") \
          $(printf '${{ env.IMAGE_NAME }}@sha256:%s ' *)

      - name: Inspect Image
        run: |
          docker buildx imagetools inspect ${{ env.IMAGE_NAME }}:${{ steps.meta.outputs.version }}

      # - name: Setting-up SBOM Tooling
      #   run: |
      #     SYFT=$(curl -sLH "Authorization: token ${{ secrets.GITHUB_TOKEN }}" "https://api.github.com/repos/anchore/syft/releases/latest" | grep -E "syft.*_linux_amd64.tar.gz" | grep "browser_download_url" | cut -d '"' -f 4)
      #     curl -sL $SYFT | tar -xzf - -C /tmp
      #     chmod +x $(file /tmp/* | grep executable | cut -d ":" -f1)

      # - name: Generating Image SBOM
      #   run:
      #     /tmp/syft --output cyclonedx-json=sbom.json packages ${{ env.IMAGE_NAME }}:${{ env.TRAEFIK_VERSION }}-${{ env.SHA_SHORT }}
