name: CI

on:
  push:
    branches:
      - main
    paths:
      - 'Dockerfile'
      - '.github/workflows/**'

jobs:
  build:
    runs-on: ubuntu-22.04

    steps:

      - name: Checking Out Branch
        uses: actions/checkout@v4.1.1
        with:
          fetch-depth: 1

      - name: Set Environment Variables
        run: |
          echo "REGISTRY=${{secrets.CONTAINER_REGISTRY}}"                                  >> $GITHUB_ENV
          echo "APP_IMAGE=traefik-rootless"                                                >> $GITHUB_ENV
          echo "TRAEFIK_VERSION=$(grep 'ARG TRAEFIK_VERSION' Dockerfile | cut -d '=' -f2)" >> $GITHUB_ENV
          echo "TIMESTAMP=$(date +%Y%m%d%H%M%S)"                                           >> $GITHUB_ENV
          echo "SHA_SHORT=$(git rev-parse --short HEAD)"                                   >> $GITHUB_ENV
          echo "BUILD_CONTEXT=."                                                           >> $GITHUB_ENV
          echo "DOCKERFILE=Dockerfile"                                                     >> $GITHUB_ENV
          echo "COMMIT_URL=https://github.com/$GITHUB_REPOSITORY/commit"                   >> $GITHUB_ENV

      - name: Docker Setup QEMU
        uses: docker/setup-qemu-action@v3.0.0

      - name: Login to Azure Container Registry
        uses: docker/login-action@v3.0.0
        with:
          registry: ${{ secrets.CONTAINER_REGISTRY }}
          username: ${{ secrets.CONTAINER_REGISTRY_USER }}
          password: ${{ secrets.CONTAINER_REGISTRY_PASSWORD }}

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v3.0.0

      - name: Build Docker Image
        id: build
        uses: docker/build-push-action@v5.0.0
        with:
          context: ${{ env.BUILD_CONTEXT }}
          file: ${{ env.DOCKERFILE }}
          labels: |
            "commit=${{ env.SHA_SHORT }}"
            "commit_url=${{ env.COMMIT_URL }}/${{ env.SHA_SHORT }}"
            "workflow_run=${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
          tags: |
            ${{ env.REGISTRY }}/${{ env.APP_IMAGE }}:latest
            ${{ env.REGISTRY }}/${{ env.APP_IMAGE }}:${{ env.TRAEFIK_VERSION }}-${{ env.TIMESTAMP }}
          platforms: linux/amd64,linux/arm64
          push: true

      - name: Setting-up SBOM Tooling
        run: |
          SYFT=$(curl -sLH "Authorization: token ${{ secrets.GITHUB_TOKEN }}" "https://api.github.com/repos/anchore/syft/releases/latest" | grep -E "syft.*_linux_amd64.tar.gz" | grep "browser_download_url" | cut -d '"' -f 4)
          curl -sL $SYFT | tar -xzf - -C /tmp
          chmod +x $(file /tmp/* | grep executable | cut -d ":" -f1)

      - name: Generating Image SBOM
        run:
          /tmp/syft --output cyclonedx-json=sbom.json packages ${{ env.REGISTRY }}/${{ env.APP_IMAGE }}:${{ env.TRAEFIK_VERSION }}-${{ env.TIMESTAMP }}
